import matplotlib.pyplot as plt
import pandas as pd

def plot_time_series_with_intervals(df, columns, time_interval='h'):
    """
    Plots specified columns of a time series dataframe with vertical lines for specified intervals.
    
    Parameters:
        df (pd.DataFrame): Time series dataframe with a datetime index.
        columns (list): List of column names to plot.
        time_interval (str): Interval for vertical lines on the plot. Options are:
            'h' - hourly
            'd' - daily
            'w' - weekly
            'm' - monthly
    
    Returns:
        None
    """
    if df.index.dtype != 'datetime64[ns]':
        raise ValueError("DataFrame index must be of datetime type")
    
    # Create the plot
    plt.figure(figsize=(12, 6))
    
    # Plot each column
    for column in columns:
        if column in df.columns:
            plt.plot(df.index, df[column], label=column)
        else:
            raise ValueError(f"Column '{column}' not found in DataFrame")
    
    # Add vertical lines based on the time_interval
    if time_interval == 'h':
        vlines = df.index[df.index.minute == 0]
    elif time_interval == 'd':
        vlines = df.index[df.index.hour == 0]
    elif time_interval == 'w':
        vlines = df.index[df.index.weekday == 0]
    elif time_interval == 'm':
        vlines = df.index[df.index.is_month_start]
    else:
        raise ValueError("Invalid time_interval. Choose from 'h', 'd', 'w', or 'm'")
    
    for vline in vlines:
        plt.axvline(vline, color='gray', linestyle='--', alpha=0.5)
    
    # Add labels, legend, and grid
    plt.xlabel("Time")
    plt.ylabel("Value")
    plt.title("Time Series Plot with Intervals")
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    plt.show()