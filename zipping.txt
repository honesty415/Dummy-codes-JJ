import pandas as pd
import numpy as np

def reshape_columns_to_rows(df: pd.DataFrame, columns: list):
    """
    Reshape specific columns in a DataFrame into a list of rows, 
    where each row combines values from the specified columns.

    Args:
        df (pd.DataFrame): Input DataFrame.
        columns (list): List of column names to reshape.

    Returns:
        np.ndarray: A 2D numpy array with reshaped rows.
    """
    # Ensure all columns are present in the DataFrame
    if not all(col in df.columns for col in columns):
        raise ValueError("One or more columns are not in the DataFrame.")
    
    # Extract the columns and convert to numpy array
    data = df[columns].values
    
    # Reshape the data to combine column values into rows
    reshaped_data = np.array([row for row in zip(*data.T)])
    
    return reshaped_data

# Example DataFrame
data = {
    'Col1': [1, 2, 3],
    'Col2': [4, 5, 6],
    'Col3': [7, 8, 9]
}
df = pd.DataFrame(data)

# Reshape 'Col1' and 'Col2'
result = reshape_columns_to_rows(df, ['Col1', 'Col2'])
print("Reshaped Data:")
print(result)

# Output:
# [[1 4]
#  [2 5]
#  [3 6]]